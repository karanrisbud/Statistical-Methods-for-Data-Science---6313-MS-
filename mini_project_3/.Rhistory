estimator = function(n,theta)
{
generator = runif(n,min=0,max=theta)
mle = max(generator)
mme = 2 * mean(generator)
return (c(mle,mme))
}
simulations = function(n,theta)
{
theta.hat = replicate(1000,estimator(n,theta))
mse = (theta.hat - theta)^2
theta.hat1.mse= mean(mse[1,])
theta.hat2.mse = mean(mse[2,])
return (c(theta.hat1.mse,theta.hat2.mse))
}
n=1
theta = 1
estimators = simulations(n,theta)
estimators
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,main=bquote(paste("N = ", .(n))),xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,main=bquote(paste("N = ", .(n))),xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
estimator = function(n,theta)
{
generator = runif(n,min=0,max=theta)
mle = max(generator)
mme = 2 * mean(generator)
return (c(mle,mme))
}
simulations = function(n,theta)
{
theta.hat = replicate(1000,estimator(n,theta))
mse = (theta.hat - theta)^2
theta.hat1.mse= mean(mse[1,])
theta.hat2.mse = mean(mse[2,])
return (c(theta.hat1.mse,theta.hat2.mse))
estimator = function(n,theta)
{
generator = runif(n,min=0,max=theta)
mle = max(generator)
mme = 2 * mean(generator)
return (c(mle,mme))
}
simulations = function(n,theta)
{
theta.hat = replicate(1000,estimator(n,theta))
mse = (theta.hat - theta)^2
theta.hat1.mse= mean(mse[1,])
theta.hat2.mse = mean(mse[2,])
return (c(theta.hat1.mse,theta.hat2.mse))
}
n=1
theta = 1
estimators = simulations(n,theta)
estimators
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,main=bquote(paste("N = ", .(n))),xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,main=bquote(paste("N = ", .(n))),xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
estimator = function(n,theta)
{
generator = runif(n,min=0,max=theta)
mle = max(generator)
mme = 2 * mean(generator)
return (c(mle,mme))
}
simulations = function(n,theta)
{
theta.hat = replicate(1000,estimator(n,theta))
mse = (theta.hat - theta)^2
theta.hat1.mse= mean(mse[1,])
theta.hat2.mse = mean(mse[2,])
return (c(theta.hat1.mse,theta.hat2.mse))
}
n=1
theta = 1
estimators = simulations(n,theta)
estimators
1-c
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,main=bquote(paste("N = ", .(n))),xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
n.values = c(1,2,3,5,10,30)
theta.values = c(1,5,50,100)
k=0
mse.theta1 = c(0,0,0,0)
mse.theta2 = c(0,0,0,0)
for(i in n.values)
{
k=1
for(j in theta.values)
{
estimators = simulations(i,j)
mse.theta1[k] = estimators[1]
mse.theta2[k] = estimators[2]
k=k+1
}
plot(theta.values,mse.theta1,xlab = 'theta',ylab = 'MSE',
type = 'l',col='blue')
lines(theta.values,mse.theta2,col='red')
legend("topleft",legend=c("Theta1","Theta2"),col=c('blue','red'),cex = 0.5,lty=c(2,2),merge = TRUE)
}
estimator = function(n,theta)
{
generator = runif(n,min=0,max=theta)
mle = max(generator)
mme = 2 * mean(generator)
return (c(mle,mme))
}
simulations = function(n,theta)
{
theta.hat = replicate(1000,estimator(n,theta))
mse = (theta.hat - theta)^2
theta.hat1.mse= mean(mse[1,])
theta.hat2.mse = mean(mse[2,])
return (c(theta.hat1.mse,theta.hat2.mse))
}
n=1
theta = 1
estimators = simulations(n,theta)
estimators
estimator = function(n,theta)
{
generator = runif(n,min=0,max=theta)
mle = max(generator)
mme = 2 * mean(generator)
return (c(mle,mme))
}
simulations = function(n,theta)
{
theta.hat = replicate(1000,estimator(n,theta))
mse = (theta.hat - theta)^2
theta.hat1.mse= mean(mse[1,])
theta.hat2.mse = mean(mse[2,])
return (c(theta.hat1.mse,theta.hat2.mse))
}
n=1
theta = 1
estimators = simulations(n,theta)
estimators
